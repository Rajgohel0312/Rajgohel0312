name: Update Recent Projects

on:
  schedule:
    - cron: "0 0 * * *"  # Daily at midnight
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Step 2: Install jq for JSON parsing
      - name: Install jq
        run: |
          echo "Installing jq..."
          sudo apt-get update
          sudo apt-get install -y jq
          jq --version

      # Step 3: Fetch latest 5 repositories from GitHub API
      - name: Fetch Latest 5 Repos
        run: |
          echo "Fetching latest 5 repos for Rajgohel0312..."
          curl -s https://api.github.com/users/Rajgohel0312/repos?sort=updated&per_page=5 > all_repos.json
          echo "Raw JSON:"
          cat all_repos.json
          echo "Generating RECENT_PROJECTS.md..."
          cat all_repos.json | jq -r '.[] | "- [\(.name)](\(.html_url)) - \(.description // "No description") ⭐ \(.stargazers_count) | 🍴 \(.forks_count)"' > RECENT_PROJECTS.md
          echo "Contents of RECENT_PROJECTS.md:"
          cat RECENT_PROJECTS.md

      # Step 4: Debug the presence of README.md
      - name: Check README.md
        run: |
          if [ -f README.md ]; then
            echo "README.md exists."
          else
            echo "README.md does not exist. Creating one..."
            echo "# Raj Gohel" > README.md
          fi
          echo "First 20 lines of README.md:"
          head -n 20 README.md

      # Step 5: Update README.md safely
      - name: Update README.md
        run: |
          echo "Updating README.md with latest projects..."
          # Read projects content
          PROJECTS=$(cat RECENT_PROJECTS.md)

          # Escape backslashes and slashes for sed
          PROJECTS_ESCAPED=$(printf '%s\n' "$PROJECTS" | sed -e 's/[\/&]/\\&/g')

          # Replace between markers or append if missing
          if grep -q "<!-- AUTO-GENERATED: Use GitHub API -->" README.md; then
            # Replace content between markers
            awk -v repl="$PROJECTS_ESCAPED" '
              BEGIN {p=1}
              /<!-- AUTO-GENERATED: Use GitHub API -->/ {print; print repl; getline; while ($0 !~ /<!-- AUTO-GENERATED: END -->/) getline; print; next}
              {print}
            ' README.md > README.tmp && mv README.tmp README.md
          else
            # Append at the end
            echo -e "\n<!-- AUTO-GENERATED: Use GitHub API -->\n$PROJECTS_ESCAPED\n<!-- AUTO-GENERATED: END -->" >> README.md
          fi
          echo "Updated README.md content:"
          cat README.md

      # Step 6: Commit and push changes
      - name: Commit & Push
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          git status
          git diff --staged
          git commit -m "Update recent projects" || echo "No changes to commit"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
